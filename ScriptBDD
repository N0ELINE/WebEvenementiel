-- USER(idUserMail, hashMdp, #droit)
-- DROITS(idDroits, libelleDroit)
-- NOTIF(idNotif, date,heure, contenu)
-- NOTIFIE (idUserNotifie, idNotifNotifie, consulte)
-- PHOTOSITE(idPhoto, lien)
-- ARTICLE(idArticle, nom, prenom, description, contenu, date, #idPhotoArticle)
-- COMMENTAIRE(idCommentaire, contenu, #idArticleCommentaire, #idUserCommentaire)
-- FAVORI(#idUserFavori, #idArticleFavori)
-- EVENT(idEvent, nom, description, date, heure, dureeMinute, effectifMax, localisation, #idPhotoEvent)
-- PARTICIPE(#idEventParticipe, #idUserParticipe, nbrPersonnes)
-- GALERIEEVENT(#idEventGalerie, #idPhotoGalerie)
-- TYPEFORMATION(idType, libelleFormation)
-- DIFFICULTEE(idDifficultée, libelleDifficultée)
-- FORMATION(idFormation, nom, description, #idTypeFormation, #idDifficulteeFormation)
-- COMMENCE(#idFormationCommence, #idUserCommence, avancement, datedebut)
-- AVIS(idAvis, contenu, etoiles, #idUserAvis)
-- AVISFORMATION(#idFormationAvis, #idAvisFormation)
-- AVISEVENT(#idEventAvis, #idAvisEvent)
-- LOGS(#idUserLogs, dateu, heure)


DROP DATABASE STAREVENT;

CREATE DATABASE STAREVENT;
use STAREVENT;

CREATE USER 'webuser'@'localhost' IDENTIFIED BY '123+aze';
GRANT ALL PRIVILEGES ON STAREVENT TO 'webuser'@'localhost';

CREATE TABLE DROITS(
    idDroits INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    libelleDroit VARCHAR(100)
);
INSERT INTO DROITS (libelleDroit) VALUES ('client');
INSERT INTO DROITS (libelleDroit) VALUES ('salarie');
INSERT INTO DROITS (libelleDroit) VALUES ('admin');
-- droit 1 = client 2 = salarie 3= admin

CREATE TABLE USER(
    idUser INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    Mail VARCHAR(100),
    hashMdp VARCHAR(255),
    droit INT,
    FOREIGN KEY (droit) REFERENCES DROITS(idDroits)
);
INSERT INTO USER (Mail,hashMdp,droit) VALUES ('client1@gmail.com', '',1);
INSERT INTO USER (Mail,hashMdp,droit) VALUES ('salarie2@gmail.com', '123+aze',2);
INSERT INTO USER (Mail,hashMdp,droit) VALUES ('admin3@gmail.com', '123+aze',3);



CREATE TABLE NOTIF(
    idNotif INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    date DATE,
    heure TIME,
    contenu VARCHAR(100)
);

CREATE TABLE NOTIFIE(
    idUserNotifie INT NOT NULL, 
    idNotifNotifie INT NOT NULL, 
    consulte BOOLEAN DEFAULT false,
    PRIMARY KEY (idUserNotifie, idNotifNotifie),
    FOREIGN KEY (idUserNotifie) REFERENCES USER(idUser) ,
    FOREIGN KEY (idNotifNotifie) REFERENCES NOTIF(idNotif)
);

CREATE TABLE PHOTOSITE(
    idPhoto INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    lien VARCHAR(200)
);

CREATE TABLE ARTICLE(
    idArticle INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    nom VARCHAR(100),
    prenom VARCHAR(100),
    description VARCHAR(500),
    contenu VARCHAR(10000),
    date DATE,
    idPhotoArticle INT,
    FOREIGN KEY (idPhotoArticle) REFERENCES PHOTOSITE(idPhoto)
);

CREATE TABLE COMMENTAIRE(
    idCommentaire INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    contenu VARCHAR(1000),
    idPhotoArticle int,
    IdUserCommentaire int,
    FOREIGN KEY (idArticleCommentaire) REFERENCES ARTICLE(idArticle),
    FOREIGN KEY (idUserCommentaire) REFERENCES USER(idUser)
);

CREATE TABLE FAVORI(
    idUserFavori INT NOT NULL ,
    idArticleFavori INT  NOT NULL ,
    PRIMARY KEY (idUserFavori, idArticleFavori),
    FOREIGN KEY (idUserFavori) REFERENCES USER(idUser),
    FOREIGN KEY (idArticleFavori) REFERENCES ARTICLE(idArticle)
);

CREATE TABLE ATELIER(
    idAtelier INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    nom VARCHAR(100),
    description VARCHAR(1000),
    date DATE,
    heure TIME,
    dureeMinute INT,
    effectifMax INT,
    localisation VARCHAR(1000),
    idPhotoAtelier INT,
    FOREIGN KEY (idPhotoAtelier) REFERENCES PHOTOSITE(idPhoto)
);

CREATE TABLE PARTICIPE(
    idAtelierParticipe INT NOT NULL,
    idUserParticipe INT NOT NULL,
    nbrPersonnes INT,
    PRIMARY KEY (idUserParticipe, idAtelierParticipe),
    FOREIGN KEY (idUserParticipe) REFERENCES USER(idUser),
    FOREIGN KEY (idAtelierParticipe) REFERENCES ATELIER(idAtelier)
);

CREATE TABLE GALERIEATELIER(
    idAtelierGalerie INT NOT NULL,
    idPhotoGalerie INT NOT NULL,
    PRIMARY KEY (idAtelierGalerie, idPhotoGalerie),
    FOREIGN KEY (idPhotoGalerie) REFERENCES PHOTOSITE(idPhoto),
    FOREIGN KEY (idAtelierGalerie) REFERENCES ATELIER(idAtelier)
);

CREATE TABLE TYPEFORMATION(
    idType INT PRIMARY KEY NOT NULL,
    libelleFormation VARCHAR(100)
);
CREATE TABLE DIFFICULTEE(
    idDifficultée INT PRIMARY KEY NOT NULL,
    libelleDifficultée VARCHAR(100)
);

CREATE TABLE FORMATION(
    idFormation INT PRIMARY KEY NOT NULL,
    nom VARCHAR(200),
    description VARCHAR(500),
    dureeHeure INT,
    idTypeFormation INT,
    idDifficulteeFormation INT,
    FOREIGN KEY (idTypeFormation) REFERENCES TYPEFORMATION(idType),
    FOREIGN KEY (idDifficultéeFormation) REFERENCES DIFFICULTEE(idDifficultée)
);

CREATE TABLE COMMENCE(
    idFormationCommence INT NOT NULL,
    idUserCommence INT NOT NULL,
    avancement INT DEFAULT 0,
    dateDebut DATE,
    PRIMARY KEY (idFormationCommence, idUserCommence),
    FOREIGN KEY (idUserCommence) REFERENCES USER(idUser),
    FOREIGN KEY (idFormationCommence) REFERENCES FORMATION(idFormation)
);

CREATE TABLE AVIS(
    idAvis INT PRIMARY KEY NOT NULL,
    contenu VARCHAR(1000),
    etoiles INT default 0,
    idUserAvis INT,
    FOREIGN KEY (idUserAvis) REFERENCES USER(idUser)
);

CREATE TABLE AVISFORMATION(
    idFormationAvis INT  NOT NULL,
    idAvisFormation INT  NOT NULL,
    PRIMARY KEY (idFormationAvis, idAvisFormation),
    FOREIGN KEY (idFormationAvis) REFERENCES FORMATION(idFormation),
    FOREIGN KEY (idAvisFormation) REFERENCES AVIS(idAvis)
);

CREATE TABLE AVISATELIER(
    idAtelierAvis INT NOT NULL,
    idAvisAtelier INT NOT NULL,
    PRIMARY KEY (idAtelierAvis, idAvisAtelier),
    FOREIGN KEY (idAtelierAvis) REFERENCES ATELIER(idAtelier),
    FOREIGN KEY (idAvisAtelier) REFERENCES AVIS(idAvis)
);

CREATE TABLE LOGS(
    idUserLogs INT NOT NULL,
    dateu DATE NOT NULL,
    heure TIME NOT NULL,
    PRIMARY KEY (idUserLogs, dateu, heure),
    FOREIGN KEY (idUserLogs) REFERENCES USER(idUser)
    );
    
CREATE TABLE QUESTIONS(
    idQuestion INT PRIMARY KEY  NOT NULL,
    idQuestionFormation INT NOT NULL,
    libelle VARCHAR(500) NOT NULL,
    FOREIGN KEY (idQuestionFormation) REFERENCES FORMATION(idFormation)
    );

CREATE TABLE REPONSES(
    idReponses INT PRIMARY KEY NOT NULL,
    idReponseQuestion INT NOT NULL,
    libelle VARCHAR(500) NOT NULL,
    bonne_rep BOOLEAN,
    FOREIGN KEY (idReponseQuestion) REFERENCES QUESTIONS(idQuestion)
    );


-- CREATE TABLE CONTACT(
--     idAtelier INT PRIMARY KEY NOT NULL,
--     mail VARCHAR(500),
--     nom VARCHAR(100),
--     prenom VARCHAR(100),
--     societe VARCHAR(100),
--     tel INT,
--     sujet VARCHAR(200),
--     message VARCHAR(50000)
-- );
